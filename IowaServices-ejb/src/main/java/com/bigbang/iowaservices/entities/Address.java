/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.bigbang.iowaservices.entities;

import java.io.Serializable;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.validation.constraints.Size;

/**
 *
 * @author Rejina
 */
@Entity
public class Address implements Serializable {
    private static final long serialVersionUID = 1L;
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    
    @Size(min=1, message="Empty street")
    private String street;
    
    @Size(min=1, message="Empty city")
    private String city;
    
    private String stateVal;

    public String getStreet() {
        return street;
    }

    public void setStreet(String street) {
        this.street = street;
    }

    public String getCity() {
        return city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    public String getState() {
        return stateVal;
    }

    public void setState(String stateVal) {
        this.stateVal = stateVal;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }
    
    //Generated by Map
    private static Map<String,Object> stateValue;
    static{
        stateValue = new LinkedHashMap<String,Object>();
        stateValue.put("Alabama", "Alabama"); //label, value
        stateValue.put("Alaska", "Alaska");
        stateValue.put("Arizona", "Arizona");
        
        stateValue.put("Iowa", "Iowa"); //label, value
        stateValue.put("Kansas", "Kansas");
        stateValue.put("Georgia", "Georgia");
        
        stateValue.put("Florida", "Florida"); //label, value
        stateValue.put("Oklohoma", "Oklohoma");
        stateValue.put("Texas", "Texas");
        
        stateValue.put("Colorado", "Colorado"); //label, value
        stateValue.put("Kentuky", "Kentuky");
        stateValue.put("Minnesota", "Minnesota");
        
        stateValue.put("Missisipi", "Missisipi"); //label, value
        stateValue.put("Missouri", "Missouri");
        stateValue.put("Pennsylvania", "Pennsylvania");
    }
    
    public Map<String,Object> getStateValue(){
        return stateValue;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Address)) {
            return false;
        }
        Address other = (Address) object;
        if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "com.bigbang.iowaservices.entities.Address[ id=" + id + " ]";
    }
    
}
